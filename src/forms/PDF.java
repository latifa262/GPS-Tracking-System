/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import entities.GPSTracker;
import entities.Position;
import entities.Vehicule;
import java.util.logging.Logger;
import entities.VehiculeGPSTracker;
import java.io.IOException;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import org.apache.pdfbox.debugger.ui.ExtensionFileFilter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDFont;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import service.GPSTrackerService;
import service.PositionService;
import service.VehiculeGPSTrackerService;
import service.VehiculeService;

/**
 *
 * @author DELL
 */
public class PDF extends javax.swing.JInternalFrame {
PositionService ps;
    VehiculeService vs;
    GPSTrackerService ts;
    VehiculeGPSTrackerService vgp;
    String[] ext = new String[1];
    String title = "PDF";
    PDDocument document;
    PDPage page;
    PDPageContentStream content;
    /**
     * Creates new form PDF
     */
    public PDF() {
         ts = new GPSTrackerService();
        vs = new VehiculeService();
        vgp = new VehiculeGPSTrackerService();
        ps = new PositionService();

        ext[0] = "pdf";
        initComponents();
        jFileChooser.addChoosableFileFilter(new ExtensionFileFilter(ext, title));
        document = new PDDocument();
        page = new PDPage();
        document.addPage(page);
    }
private static PDF instane;
public static PDF getInstane() {
		if(instane == null)
                	instane = new PDF();
		return instane;
	}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();

        jFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here;
            String file = jFileChooser.getSelectedFile().getAbsolutePath();
            content = new PDPageContentStream(document, page);
            PDFont font = PDType1Font.TIMES_ROMAN ;
            content.setFont(font, 12);
            content.beginText();
            content.setLeading(14.5f);
            content.newLineAtOffset(15, 700);
            
            
            content.drawString( "*************************************** Les positions d’un véhicule entre deux dates **************************************" );
            content.newLine();
            content.newLine();
            content.drawString( "**** VOTRE VEHICULES ****" );
            content.newLine();
            for (Vehicule v : vs.findAll()) {
               content.showText(v.toString());
                content.newLine();
            }
            
            content.newLine();
            content.drawString( "**** VOTRE GPS ****" );
            content.newLine();
            for (GPSTracker g : ts.findAll()) {
                content.showText(g.toString());
                content.newLine();
            }
            
            content.newLine();
            content.drawString( "**** LES POSITIONS ****" );
            content.newLine();
            for (VehiculeGPSTracker vg : vgp.findAll()) {
                content.showText(vg.toString());
                content.newLine();
            }
            for (Position p : ps.findAll()) {
                content.showText(p.toString());
                content.newLine();
            }
           
            content.endText();
            content.close();
            document.save(file+".pdf");
            JOptionPane.showMessageDialog(this, "le fichier telecherger avec succee");
            document.close();
        } catch (IOException e) {
            Logger.getLogger(PDF.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jFileChooserActionPerformed


    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser;
    // End of variables declaration//GEN-END:variables
}
