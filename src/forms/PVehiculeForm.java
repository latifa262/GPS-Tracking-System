/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import com.teamdev.jxmaps.LatLng;
import entities.Position;
import entities.Vehicule;
import entities.VehiculeGPSTracker;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import service.GPSTrackerService;
import service.PositionService;
import service.VehiculeGPSTrackerService;
import service.VehiculeService;

/**
 *
 * @author DELL
 */
public class PVehiculeForm extends javax.swing.JInternalFrame {
private GPSTrackerService ts;
private VehiculeService vs;
private PositionService ps;
private List<Vehicule> vehiculess;
private VehiculeGPSTrackerService vgps;
private List<Position> positions;
private DefaultTableModel model;
    private static int id;

    /**
     * Creates new form PVehiculeForm
     */
    public PVehiculeForm() {
        initComponents();
        ts = new GPSTrackerService();
        ps = new PositionService();
        vs = new VehiculeService();
        vgps=new VehiculeGPSTrackerService();
        model = (DefaultTableModel) listePosition.getModel();
       // loadTrackers();
        loadVehicules();
    }

     private void loadVehicules() {
        for (Vehicule t : vs.findAll()) {
            listevehicules.addItem(t);
        }
    }
   
    private static PVehiculeForm instane;
    public static PVehiculeForm getInstane() {
		if(instane == null)
                	instane = new PVehiculeForm();
		return instane;
	}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        listevehicules = new javax.swing.JComboBox();
        debutTxt = new com.toedter.calendar.JDateChooser();
        finTxt = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listePosition = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("Liste des vehicules");

        jLabel2.setText("Date Debut");

        jLabel3.setText("Date Fin");

        listevehicules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listevehiculesActionPerformed(evt);
            }
        });

        jButton1.setText("Afficher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Map");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(debutTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(finTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(listevehicules, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(111, 111, 111))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(listevehicules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(debutTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(finTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(22, 22, 22))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Les positions d’un véhicule entre deux dates", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        listePosition.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Latitude", "Longitude", "Date"
            }
        ));
        jScrollPane2.setViewportView(listePosition);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        loadPositions(positionsVehicule());
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void listevehiculesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listevehiculesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listevehiculesActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Component source = (Component) evt.getSource();
        Main frame = (Main) SwingUtilities.windowForComponent(source);
        frame.map(positions);
        //List<Position> list = new ArrayList<>();
        //list.addAll(positions);
        //frame.map(list);
         /*Mapa m = new Mapa("les positions enregistrées par un tracker entre deux dates dans une map");
          for(Position p:positions){
              m.generateMarker(new LatLng(p.getLatitude(), p.getLongitude()));
          }*/
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private List<Position> positionsVehicule(){
     List<VehiculeGPSTracker>vehiculeGPSTrackers = findTrackersOfVehicule((Vehicule)listevehicules.getSelectedItem());
        Date dateDebut=debutTxt.getDate();
        Date dateFin=finTxt.getDate();
        List<Position> positionsVehicule=new ArrayList<Position>();
        for(VehiculeGPSTracker vg: vehiculeGPSTrackers ){
            positionsVehicule.addAll(ps.findPositionsBetweenDates(vg.getGpsTracker(), dateDebut, dateFin));
            
        }
      //  ArrayList list = new ArrayList() ;
        Set set = new HashSet() ;
        set.addAll(positionsVehicule) ;
        ArrayList distinctList = new ArrayList(set) ;
        System.out.println(distinctList.toString());
        
     //  Set<Position> filter = new HashSet<Position>(positionsVehicule);
      // List<Position> last = new ArrayList<Position>(filter);
        return distinctList;
    }
private List<VehiculeGPSTracker> findTrackersOfVehicule(Vehicule v){
    List<VehiculeGPSTracker> vehiculeGPSTrackers=new ArrayList<VehiculeGPSTracker>();
    for(VehiculeGPSTracker vg: vgps.findAll()){
        if (v.getId()==vg.getVehicule().getId()) {
            vehiculeGPSTrackers.add(vg);
        }
    }
        System.out.println(vehiculeGPSTrackers.toString());
        return vehiculeGPSTrackers;
    }
private void loadPositions(List<Position> positions){
     model.setRowCount(0);
     List<Position> nouvelle = new ArrayList<>();
     nouvelle=positions;
     for (Position a : positions) {
  if (!nouvelle.contains(a)) {
     nouvelle.add(a);
  }
}
     positions=nouvelle;
       
        for (Position p :positions) {
            model.addRow(new Object[]{
                p.getId(),
                p.getLatitude(),
                p.getLongitude(),
                p.getDate()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser debutTxt;
    private com.toedter.calendar.JDateChooser finTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable listePosition;
    private javax.swing.JComboBox listevehicules;
    // End of variables declaration//GEN-END:variables
}
